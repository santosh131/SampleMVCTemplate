@model SampleModels.Roles

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@Html.HiddenFor(model => model.ActiveIndicator)
 

@if (Model.CUDOperationType == Helpers.CommonEnums.ActivateInactivateOperationType ||
       Model.CUDOperationType == Helpers.CommonEnums.DeleteOperationType)
{


    <div class="form-group">
        @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
        </div>
    </div>
}
else
{
    <div class="form-group">
        @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
        </div>
    </div>
}

@if (Model.CUDOperationType != Helpers.CommonEnums.CreateOperationType)
{
    <div class="form-group">
        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
            @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control", @disabled="disabled" } })
            @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 mb-3">
            <label for="StatusDesc">Status</label>
            @Html.DisplayFor(model => model.StatusDesc)
            @Html.ValidationMessageFor(model => model.StatusDesc, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6 mb-3">

        </div>
    </div>
}
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        @if (Model.CUDOperationType == Helpers.CommonEnums.CreateOperationType)
        {
            @Html.CustomInputButton("btnRoleCreateSave", "Save", "button", new { @class = "btn btn-default" }, "A00022")
        }

        else
        {
            @Html.CustomInputButton("btnRoleEditSave", "Save", "button", new { @class = "btn btn-default" }, "A00023")
            if (Model.ActiveIndicator)
            {
                @Html.CustomInputButton("btnRoleEditActivateInactivate", "Inactivate", "button", new { @class = "btn btn-default" }, "A00024")
            }
            else
            {
                @Html.CustomInputButton("btnRoleEditActivateInactivate", "Activate", "button", new { @class = "btn btn-default" }, "A00024")
            }
        }
    </div>
</div>
